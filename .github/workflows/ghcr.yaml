name: Build and Attest Docker Image

on:
  push:
    branches:
      - dev
  workflow_dispatch:


jobs:
  build-and-attest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # Required for OIDC-based signing
      attestations: write  # Needed for provenance attestation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker pass
        run: echo "${{ secrets.DOCKER_PASSWORD }}"
      - name: Log in to Docker user
        run: echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u datatest067 --password-stdin
        #run: echo "${{ secrets.DOCKER_USERNAME }}"
      #   run: echo "${{ inputs.docker-password }}" | docker login ${{ inputs.registry }} -u ${{ inputs.docker-username }} --password-stdin
        #run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ inputs.registry }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: |
          #IMAGE_URI=${{ inputs.registry }}/${{ inputs.image-name }}
          IMAGE_URI="ghcr.io/datatest067/mine:latest"
          #docker push ghcr.io/datatest067/mine:latest
          docker build -t ghcr.io/datatest067/mine:latest .
          #docker tag $IMAGE_URI:latest manishmf/jmeter:latest
          #echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ inputs.registry }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u datatest067 --password-stdin
          docker push ghcr.io/datatest067/mine:latest
          IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/datatest067/mine:latest | cut -d'@' -f2)
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          echo "IMAGE_DIGEST=$IMAGE_DIGEST" >> $GITHUB_ENV

      - name: Install Cosign
        run: |
          COSIGN_VERSION=$(curl -sL https://api.github.com/repos/sigstore/cosign/releases/latest | jq -r ".tag_name")
          curl -LO "https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64"
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign
          cosign version

      - name: Sign the Docker image
        run: |
          cosign inspect --attestations ghcr.io/datatest067/mine:latest

          #cosign sign ghcr.io/datatest067/mine:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/datatest067/mine
          subject-digest: "${{ env.IMAGE_DIGEST }}" #"sha256:${{ env.IMAGE_DIGEST }}"
          push-to-registry: true
          show-summary: true
          
      - name: Verify attestation
        run: |
        
         cosign verify-attestation --certificate-identity "https://github.com/${{ github.repository }}/.github/workflows/${{ github.workflow }}@refs/heads/${{ github.ref_name }}" --certificate-oidc-issuer "https://token.actions.githubusercontent.com" ghcr.io/datatest067/mine:latest
         #cosign verify --certificate-identity-regexp '.*' --certificate-oidc-issuer-regexp 'https://token.actions.githubusercontent.com' ghcr.io/datatest067/mine:latest

      # - name: Verify attestation
      #   run: |
      #       cosign verify-attestation --key ${{ secrets.COSIGN_KEY }} ghcr.io/datatest067/mine:latest
      # #     cosign verify-attestation \
      #       --type slsaprovenance \
      #       --certificate-identity "https://github.com/${{ github.repository }}/.github/workflows/ghcr.yaml@refs/heads/${{ github.ref_name }}" \
      #       --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
      #       ghcr.io/datatest067/mine:latest

      # - name: Generate attestation
      #   run: |
      #     docker trust key generate dummy
      #     docker trust signer add --key ~/.docker/trust/private/$GITHUB_REPOSITORY-key.json repoName dummy
      #     docker trust sign ${{ env.IMAGE_URI }}:${{ env.IMAGE_DIGEST }}

      # - name: Verify attestation
      #   run: docker trust inspect --pretty ${{ env.IMAGE_URI }}:${{ env.IMAGE_DIGEST }}

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.IMAGE_URI }}
      #     subject-digest: "${{ env.IMAGE_DIGEST }}" #"sha256:${{ env.IMAGE_DIGEST }}"
      #     push-to-registry: true
